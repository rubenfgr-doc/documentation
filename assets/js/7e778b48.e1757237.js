(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{101:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return i})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return p}));var n=r(3),a=r(7),o=(r(0),r(128)),c={title:"EMQX"},i={unversionedId:"Servidores/Protocolos/MQTT/emqx",id:"Servidores/Protocolos/MQTT/emqx",isDocsHomePage:!1,title:"EMQX",description:"SSL/TLS",source:"@site/docs/Servidores/Protocolos/MQTT/emqx.md",sourceDirName:"Servidores/Protocolos/MQTT",slug:"/Servidores/Protocolos/MQTT/emqx",permalink:"/documentation/Servidores/Protocolos/MQTT/emqx",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Servidores/Protocolos/MQTT/emqx.md",version:"current",frontMatter:{title:"EMQX"},sidebar:"tutorialSidebar",previous:{title:"Vsftpd Ubuntu 20.04",permalink:"/documentation/Servidores/Protocolos/FTP/vsftpd_ubuntu20"},next:{title:"Referencia",permalink:"/documentation/Servidores/Protocolos/SSH/0referencia"}},l=[{value:"SSL/TLS",id:"ssltls",children:[{value:"Letsencrypt - Ubuntu",id:"letsencrypt---ubuntu",children:[]},{value:"Self-Signed",id:"self-signed",children:[]},{value:"Docker",id:"docker",children:[]}]}],s={toc:l};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"ssltls"},"SSL/TLS"),Object(o.b)("h3",{id:"letsencrypt---ubuntu"},"Letsencrypt - Ubuntu"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Instalar Certbot")),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre",className:"language-sh"},"sudo apt-get install certbot**\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Crear un certificado para el dominio a utilizar")),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre",className:"language-sh"},"sudo certbot certonly --standalone -d example.com -d emqx.example.com\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Verificar certificado con OpenSSL")),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre",className:"language-sh"},"openssl erify -CAfile /etc/letsencrypt/live/<DOMINIO>/chain.pem\n# Deber\xeda dar un 'OK'\n")))),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Dashboard")),Object(o.b)("p",{parentName:"li"},'Modificar "/etc/eqmttd/plugins/emq_dashboard.conf"'),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre",className:"language-sh"},"dashboard.listener.https = 18084\ndashboard.listener.https.access.1 = permitir todos los\ndashboard.listener.https.acceptors = 2\ndashboard.listener.https.max_clients = 512\ndashboard.listener.https.access.1 = permitir todos\n## sustituya el \\$ dominio con su \xfanico\ndashboard.listener.https.keyfile = /etc/letsencrypt/live/$domain/privkey.pem\ndashboard.listener.https.certfile = /etc/letsencrypt/live/$domain/fullchain.pem\n"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"WSS")),Object(o.b)("p",{parentName:"li"},'Modificar "/opt/emqx/etc/emqx.conf"'),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre",className:"language-sh"},"listener.wss.external.keyfile = /etc/letsencrypt/live/$domain/privkey.pem\nlistener.wss.external.certfile = /etc/letsencrypt/live/$domain/fullchain.pem\n"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"MQTT/SSL")),Object(o.b)("p",{parentName:"li"},'Modificar "/opt/emqx/etc/emqx.conf"'),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre",className:"language-sh"},"listener.ssl.external.keyfile = /etc/letsencrypt/live/$domain/privkey.pem\nlistener.ssl.external.certfile = /etc/letsencrypt/live/$domaion/fullchain.pem\n")))),Object(o.b)("h3",{id:"self-signed"},"Self-Signed"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://www.emqx.io/blog/emqx-server-ssl-tls-secure-connection-configuration-guide"},"https://www.emqx.io/blog/emqx-server-ssl-tls-secure-connection-configuration-guide")),Object(o.b)("h3",{id:"docker"},"Docker"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Crear volumenes para las claves")),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre",className:"language-sh"}," # docker-compose\n service:\n   emqx:\n     volumes:\n       - /etc/letsencrypt/live/$domain/privkey.pem:/opt/emqx/etc/certs/privkey.pem\n       - /etc/letsencrypt/live/$domain/fullchain.pem:/opt/emqx/etc/certs/fullchain.pem\n")))))}p.isMDXComponent=!0},128:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return d}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},b=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(r),u=n,d=b["".concat(c,".").concat(u)]||b[u]||m[u]||o;return r?a.a.createElement(d,i(i({ref:t},s),{},{components:r})):a.a.createElement(d,i({ref:t},s))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,c=new Array(o);c[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var s=2;s<o;s++)c[s]=r[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);