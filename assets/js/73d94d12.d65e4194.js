(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{120:function(e,n,r){"use strict";r.d(n,"a",(function(){return u})),r.d(n,"b",(function(){return m}));var t=r(0),o=r.n(t);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=o.a.createContext({}),l=function(e){var n=o.a.useContext(d),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},u=function(e){var n=l(e.components);return o.a.createElement(d.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},f=o.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,i=e.originalType,a=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(r),f=t,m=u["".concat(a,".").concat(f)]||u[f]||p[f]||i;return r?o.a.createElement(m,c(c({ref:n},d),{},{components:r})):o.a.createElement(m,c({ref:n},d))}));function m(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=r.length,a=new Array(i);a[0]=f;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:t,a[1]=c;for(var d=2;d<i;d++)a[d]=r[d];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},93:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return a})),r.d(n,"metadata",(function(){return c})),r.d(n,"toc",(function(){return s})),r.d(n,"default",(function(){return l}));var t=r(3),o=r(7),i=(r(0),r(120)),a={title:"Aliases"},c={unversionedId:"Microservicios/Docker/aliases",id:"Microservicios/Docker/aliases",isDocsHomePage:!1,title:"Aliases",description:"`sh",source:"@site/docs/Microservicios/Docker/aliases.md",sourceDirName:"Microservicios/Docker",slug:"/Microservicios/Docker/aliases",permalink:"/documentation/Microservicios/Docker/aliases",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Microservicios/Docker/aliases.md",version:"current",frontMatter:{title:"Aliases"},sidebar:"tutorialSidebar",previous:{title:"Referencia",permalink:"/documentation/Microservicios/Docker/0referencia"},next:{title:"Dockerfiles",permalink:"/documentation/Microservicios/Docker/dockerfiles"}},s=[],d={toc:s};function l(e){var n=e.components,r=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(t.a)({},d,r,{components:n,mdxType:"MDXLayout"}),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sh"},'############################################################################\n#                                                                          #\n#               ------- Useful Docker Aliases --------                     #\n#                                                                          #\n#     # Installation :                                                     #\n#     copy/paste these lines into your .bashrc or .zshrc file or just      #\n#     type the following in your current shell to try it out:              #\n#                                                                          #\n#     # Usage:                                                             #\n#     dcu            : docker-compose up -d                                #\n#     dcd            : docker-compose down                                 #\n#     dex <container>: execute a bash shell inside the RUNNING <container> #\n#     di <container> : docker inspect <container>                          #\n#     dim            : docker images                                       #\n#     dip            : IP addresses of all running containers              #\n#     dl <container> : docker logs -f <container>                          #\n#     dnames         : names of all running containers                     #\n#     dps            : docker ps                                           #\n#     dpsa           : docker ps -a                                        #\n#     drmc           : remove all exited containers                        #\n#     drmid          : remove all dangling images                          #\n#     drun <image>   : execute a bash shell in NEW container from <image>  #\n#     dsr <container>: stop then remove <container>                        #\n#                                                                          #\n############################################################################\n\nfunction dnames-fn {\n    for ID in `docker ps | awk \'{print $1}\' | grep -v \'CONTAINER\'`\n    do\n        docker inspect $ID | grep Name | head -1 | awk \'{print $2}\' | sed \'s/,//g\' | sed \'s%/%%g\' | sed \'s/"//g\'\n    done\n}\n\nfunction dip-fn {\n    echo "IP addresses of all named running containers"\n\n    for DOC in `dnames-fn`\n    do\n        IP=`docker inspect $DOC | grep -m3 IPAddress | cut -d \'"\' -f 4 | tr -d "\\n"`\n        echo $DOC : $IP\n    done\n}\n\nfunction dex-fn {\n    docker exec -it $1 /bin/bash\n}\n\nfunction di-fn {\n    docker inspect $1\n}\n\nfunction dl-fn {\n    docker logs -f $1\n}\n\nfunction drun-fn {\n    docker run -it $1 /bin/bash\n}\n\nfunction dsr-fn {\n    docker stop $1;docker rm $1\n}\n\nalias dcu="docker-compose up -d"\nalias dcd="docker-compose down"\nalias dex=dex-fn\nalias di=di-fn\nalias dim="docker images"\nalias dip=dip-fn\nalias dl=dl-fn\nalias dnames=dnames-fn\nalias dps="docker ps"\nalias dpsa="docker ps -a"\nalias drmc="docker ps -a -q -f status=exited | xargs docker rm"\nalias drmid="docker images -f dangling=true -q | xargs docker rmi"\nalias drun=drun-fn\nalias dsr=dsr-fn\n')))}l.isMDXComponent=!0}}]);