(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{81:function(e,a,r){"use strict";r.r(a),r.d(a,"frontMatter",(function(){return i})),r.d(a,"metadata",(function(){return s})),r.d(a,"toc",(function(){return c})),r.d(a,"default",(function(){return m}));var t=r(3),n=r(7),o=(r(0),r(88)),i={title:"Consejos"},s={unversionedId:"Git/consejos",id:"Git/consejos",isDocsHomePage:!1,title:"Consejos",description:"1. NUNCA hacer commit directamente a \u2018master\u2019",source:"@site/docs/Git/consejos.md",sourceDirName:"Git",slug:"/Git/consejos",permalink:"/documentation/Git/consejos",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Git/consejos.md",version:"current",frontMatter:{title:"Consejos"},sidebar:"tutorialSidebar",previous:{title:"Referencia",permalink:"/documentation/Git/0referencia"},next:{title:"Enlaces de inter\xe9s",permalink:"/documentation/Git/enlaces"}},c=[],l={toc:c};function m(e){var a=e.components,r=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},l,r,{components:a,mdxType:"MDXLayout"}),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"NUNCA hacer commit directamente a \u2018master\u2019"),"\nAl trabajar directamente con la rama master estamos perdiendo una de las caracter\xedsticas m\xe1s destacables del trabajo con Git, la capacidad de crear ramas instant\xe1neamente.\nBuena practica: crear una nueva rama para cosa nueva en la que trabajar, de esta manera master (o develop) siempre estar\xe1 lista para cambios menores, r\xe1pidos o hotfixes.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"NUNCA hacer git push \u2013force"),"\nEsto sobreescribe toda la estructura y secuencia de commits en el repositorio central, tirando a la basura los commits de las dem\xe1s personas.\nPara evitar que alguien haga un push \u2013force. De ser un servicio est\xe1ndar utilizar:\nGit config \u2013system receive.denyNonFastForwards true")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"NUNCA subir archivos binarios"),"\nLos archivos como im\xe1genes, binarios compilados o incluso videos son mucho m\xe1s grandes que los archivos de texto de nuestro c\xf3digo y si hacemos commits de ellos a nuestro repositorio central el tama\xf1o de este se volver\xe1 muy grande y lo que se busca es tener un VCS distribuido r\xe1pido de clonar y navegar entre ramas.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"NUNCA usar git pull"),"\nHaciendo git pull no tenemos oportunidad de ver que clase de cambios estamos tratando de incorporar.\nLa recomendaci\xf3n es usar git fetch peri\xf3dicamente para actualizar solo la referencia a las ramas remotas, y darle una inspecci\xf3n r\xe1pida y decidir qu\xe9 hacer.\nPara mantener el repositorio limpio, nuestros commits locales deben estar encima de los cambios de los dem\xe1s, y para esto en lugar de git pull deberemos usar git pull \u2013rebase. As\xed los conflictos ser\xe1n resueltos commit por commit y no todo en uno.\nNo es bueno hacer un rebase de un repositorio remoto, pero en local es bueno para mantener la historia local limpio.\nLo recomendable es crear una nueva rama para agregar nueva funcionalidad a la aplicaci\xf3n. En local haces un rebase para ver un historial limpio y en remoto se hace un merge commit para implementar esta funcionalidad en la rama principal.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"NUNCA Usar Fast Forward"),"\nCon git merge no aseguramos un merge commit, estos solo son necesarios cuando ambas ramas a mezclar tienen nuevos commits.\nSin un merge commit no podemos saber que commits representan una caracter\xedstica sobre la que se ha trabajado sin inspeccionar uno por uno los commits y sus mensajes."),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Sin la opci\xf3n de fast forward. Se respeta el historial de commits de la rama fusionada")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Usando fast-forward. El historial se mezcla con la rama actual y no es posible diferenciar de donde provienen los commits"))),Object(o.b)("blockquote",{parentName:"li"},Object(o.b)("p",{parentName:"blockquote"},'Recomendable usar "merge \u2013no-ff"')),Object(o.b)("p",{parentName:"li"},"Importante: A\xfan as\xed, con o sin FF el c\xf3digo no ser ver\xe1 afectado."))))}m.isMDXComponent=!0},88:function(e,a,r){"use strict";r.d(a,"a",(function(){return u})),r.d(a,"b",(function(){return b}));var t=r(0),n=r.n(t);function o(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function i(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?i(Object(r),!0).forEach((function(a){o(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function c(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=n.a.createContext({}),m=function(e){var a=n.a.useContext(l),r=a;return e&&(r="function"==typeof e?e(a):s(s({},a),e)),r},u=function(e){var a=m(e.components);return n.a.createElement(l.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.a.createElement(n.a.Fragment,{},a)}},d=n.a.forwardRef((function(e,a){var r=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=m(r),d=t,b=u["".concat(i,".").concat(d)]||u[d]||p[d]||o;return r?n.a.createElement(b,s(s({ref:a},l),{},{components:r})):n.a.createElement(b,s({ref:a},l))}));function b(e,a){var r=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var c in a)hasOwnProperty.call(a,c)&&(s[c]=a[c]);s.originalType=e,s.mdxType="string"==typeof e?e:t,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);