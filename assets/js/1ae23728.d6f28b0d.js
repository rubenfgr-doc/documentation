(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{70:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return o})),r.d(n,"metadata",(function(){return c})),r.d(n,"toc",(function(){return b})),r.d(n,"default",(function(){return s}));var a=r(3),t=r(7),l=(r(0),r(86)),o={title:"Comandos"},c={unversionedId:"Microservicios/Docker/comandos",id:"Microservicios/Docker/comandos",isDocsHomePage:!1,title:"Comandos",description:"Informaci\xf3n sobre el servicio de Docker",source:"@site/docs/Microservicios/Docker/comandos.md",sourceDirName:"Microservicios/Docker",slug:"/Microservicios/Docker/comandos",permalink:"/documentation/Microservicios/Docker/comandos",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Microservicios/Docker/comandos.md",version:"current",frontMatter:{title:"Comandos"},sidebar:"tutorialSidebar",previous:{title:"Merge VS Rebase",permalink:"/documentation/Git/merge_vs_rebase"},next:{title:"Principal",permalink:"/documentation/"}},b=[{value:"IMAGENES",id:"imagenes",children:[]},{value:"IMAGENES OFICIALES",id:"imagenes-oficiales",children:[]},{value:"IMAGENES PERSONALIZADAS",id:"imagenes-personalizadas",children:[]},{value:"Prerrequisitos",id:"prerrequisitos",children:[]},{value:"Soluci\xf3n",id:"soluci\xf3n",children:[]}],i={toc:b};function s(e){var n=e.components,r=Object(t.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},i,r,{components:n,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Informaci\xf3n sobre el servicio de Docker"),Object(l.b)("p",null,'" /var/run/docker.sock'),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Correr HELLO-WORLD"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},"docker run hello-world\n")),Object(l.b)("h2",{id:"imagenes"},"IMAGENES"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Ver las imagenes actuales en el host de docker"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},"docker images\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Listar imagenes filtrando por atributos"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},"docker images -f dangling=true\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Listar con filtrado y solo mostrar los ID"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},"docker images -f dangling=true -q\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Eliminar todas las imagenes en el limbo"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},"docker images -f dangling=true -q | xargs docker rmi\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Eliminar una imagen"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker image rm -f "ID-imagen"\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Eiminar varias imagenes"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker rmi "nombre-imagen":"tag-imagen" ["nombre-imagen":"tag-imagen"]\n')),Object(l.b)("h2",{id:"imagenes-oficiales"},"IMAGENES OFICIALES"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Descargar una imagen oficial"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker pull "nombre-imagen"\n')),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker pull "nombre-imagen":"version"\n')),Object(l.b)("h2",{id:"imagenes-personalizadas"},"IMAGENES PERSONALIZADAS"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Buenas practicas")),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Efimeros (servicio destruible facilmente)"),Object(l.b)("li",{parentName:"ul"},"Un servicio por contenedor"),Object(l.b)("li",{parentName:"ul"},'Build context -" .dockerignore'),Object(l.b)("li",{parentName:"ul"},"Pocas capas"),Object(l.b)("li",{parentName:"ul"},"Multi linea \\"),Object(l.b)("li",{parentName:"ul"},"Varios argumentos en una sola capa"),Object(l.b)("li",{parentName:"ul"},"No instalar paquetes innecesarios"),Object(l.b)("li",{parentName:"ul"},"Labels"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Construir una imagen a trav\xe9s del Dockerfile (tag para poner nombre a la imagen al final para cojer el Dockerfile). Contenido del Dockerfile para apache+ubuntu")),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"FROM")," - S.O \xf3 Imagen misma desde donde comenzar"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"RUN")," - Intrucciones que se pueden ejecutar en la terminal"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"COPY/ADD")," - Copiar archivos desde la maquina a la imagen. ADD se utiliza para utilizar una URL de origen, es decir, copia el contenido de esa URL al destino"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"ENV")," - Variables de entorno"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"WORKDIR")," - Directorios de trabajo"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"EXPOSE")," - Exponer puertos"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"LABEL")," - Etiquetas (metadata de la imagen, version, descripci\xf3n, etc.)"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"USER")," - Usuario que ejecuta la tarea"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"VOLUME")," - Vol\xfamenes"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"CMD .dockerignore"))))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'FROM ubuntu:latest\n\nLABEL version=1.0\nLABEL descripcion="This is an apache image"\nLABEL vendor=yo\n\nRUN apt-get update && apt-get upgrade && apt-get install apache2 -y\n\nWORKDIR /var/www/html\n\nCOPY bootstrap .\n\nENV contenido prueba\n\nRUN echo "$contenido" " /var/www/html/prueba.html\n\nRUN echo "$(whoami)" " /var/www/html/user1.html\n\nUSER ricardo && chown ricardo /var/www/html\n\nRUN echo "$(whoami)" " /var/www/html/user2.html\n\nEXPOSE 81\n\nCMD apachectl -DFOREGROUND\n')),Object(l.b)("h1",{id:"dockerfile"},"DOCKERFILE"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Crear un script CMD para Dockerfile"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\necho "Iniciando container..."\napachectl -DFOREGROUND\n')),Object(l.b)("h1",{id:"build"},"BUILD"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Enviar datos al .dockerignore"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'echo ""nombre-archivo-directorio" "" .dockerignore\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Una vez creado el Dockerfile ejecutar por shell"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker build --tag apache-centos[:"tag"]`\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Build con un dockerfile con distinto nombre"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker build -t test -f "nombre-dockerfile-personalizado"\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Comprobar el historial de capas de una imagen"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker history -H "nombre-imagen":"tag"\n')),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker history -H "nombre-imagen":"tag" --no-trunc\n')),Object(l.b)("h1",{id:"containers"},"CONTAINERS"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Correr un contenedor (-d en segundo plano)"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker run -d "nombre-imagen"\n')),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker run -d --name "nombre" "nombre-imagen"[:"tag"]\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Correr un contenedor mapeando el puerto del PC anfitrion al contenedor"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker run -d --name "nombre" -p 80:80 "nombre-imagen"[:"tag"]')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Correr un contenedor mapeando el puerto del PC anfitrion al contenedor"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker run -d --restart unless-stopped redis --name "nombre" -p 80:80 "nombre-imagen"[:"tag"]')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Correr un contenedor agregando variables de entorno"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker run -dti -e "prueba1=4321" --name environment env')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Correr un contenedor y navegar a un directorio en el arranque"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker run -d -w /"dir-name" "nombre-imagen"[:"tag"]\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Ver los contenedores en ejecuci\xf3n"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"docker ps")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"ver los contenedores en ejecuci\xf3n (incluidos los caidos)"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"docker ps -a")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"ver los contenedores en ejecuci\xf3n (Solo ID)"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"docker ps -q")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Ver el \xfaltimo contenedor creado"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"docker ps -l")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Eliminar contenedores con --force y --volumes"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker rm -fv "nombre-contenedor" ["nombre-contenedor"...]')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Eliminar todos los contenedores"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"docker ps -q | xargs docker rm -f")),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"docker rm -fv $(docker ps -aq)")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Inspeccionar un contenedor"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker inspect "nombre-contenedor"|"ID-contenedor"')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Renombrar un contenedor en ejecuci\xf3n"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'dockerrename "nombre-actual" "nombre-nuevo"')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Detener un contenedor"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker stop "nombre-contenedor"|"ID-contenedor"')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Iniciar un contenedor"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker start "nombre-contenedor"|"ID-contenedor"')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Reiniciar (stop + start) un contenedor"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker restart "nombre-contenedor"|"ID-contenedor"')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Ingresar a la terminal de un contenedor -ti(terminal + interactivo)"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker exec -ti "nombre-contenedor"|"ID-contenedor" bash')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Ingresar a la terminal de un contenedor -u (usuario) -ti(terminal + interactivo)"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker exec -u "nombre-usuario" -ti "nombre-contenedor"|"ID-contenedor" bash')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Comprobar usuario y hostname dentro de la terminal del contenedor"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"whoami"),"\n",Object(l.b)("inlineCode",{parentName:"p"},"hostname")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Ver el log de un contenedor en ejecuci\xf3n"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker logs -f "nombre-contenedor"')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Ver el consumo hardware de un contenedor"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker stats "nombre-contenedor"')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Limitar la RAM de un contenedor"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker run -d -m ""cantidad"[mb|gb]" --name "nombre-contenedor" "nombre-imagen"')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Limitar la CPU de un contenedor"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker run -d --cpuset-cpus "rango-cpus" --name "nombre-contenedor" "nombre-imagen"')),Object(l.b)("p",null,'" rango-cpus = si tenemos 6 CPUs, 0-2 ocuparia: 0, 1 y 2; 3-5 ocupar\xeda 3, 4 y 5'),Object(l.b)("p",null,'" Ver cantidad de CPUs ',Object(l.b)("inlineCode",{parentName:"p"},'grep "model name" /proc/cpuinfo | wc -l')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Copiar archivos a un contenedor corriendo"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker cp "archivo|directorio-anfitrion nombre-contenedor:nombre-directorio"')),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker cp "nombre-contenedor:nombre-directorio archivo|directorio-anfitrion"')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Guardar el estado de un contenedor en una imagen"))),Object(l.b)("p",null,'" El contenido dentro del volumen no se guarda con la imagen resultante de un commit'),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker commit "nombre-contenedor-run" "nombre-nueva-imagen"')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Sobreescribir el CMD de una imagen sin un Dockerfile"))),Object(l.b)("p",null,'" Pasar el cmd al final de la imagen al corer un contenedor con run (al final)'),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"docker run -d -p 8080:8080 centos python -m SimpleHTTPServer 8080")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Desctrucci\xf3n de un contenedor autom\xe1ticamente"))),Object(l.b)("p",null,'" --rm el contenedor es temporal y una vez que se salga de la sesi\xf3n debe morir'),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},'docker run --rm -ti --name "nombre-contenedor" "nombre-imagen" bash')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Comprobar el tama\xf1o de los archivos/directorios de creaci\xf3n de la imagen"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"du -shc *")),Object(l.b)("h1",{id:"volumes"},"VOLUMES"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Vol\xfamenes de host - Caso pr\xe1ctico MySQL"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},'docker run -d --name my-db -p 3310:3306 -e "MYSQL_ROOT_PASSWORD=12345678" -v d:/1_RubenFGR/1_DevOps/1_Documentacion/Microservicios/Docker/Containers/mysql:/var/lib/mysql mariadb:latest\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Vol\xfamenes an\xf3nimos - Caso pr\xe1ctico MySQL"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},'docker run -d --name my-db -p 3310:3306 -e "MYSQL_ROOT_PASSWORD=12345678" -v /var/lib/mysql mariadb:latest\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Crear un volumen"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},'docker volume create "nombre-volumen"\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Eliminar un volumen"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},'docker volume rm "nombre-volumen"\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Correr un contenedor asignando un volumen ya creado"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},'docker run -d --name my-db -p 3310:3306 -e "MYSQL_ROOT_PASSWORD=12345678" -v "my-create-volumen":/var/lib/mysql mariadb:latest\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Ver volumes que no est\xe1n referenciados por ning\xfan contenedor"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"docker volume ls -f dangling=true\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Eliminar volumnes no referenciados"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"docker volume ls -f dangling=true -q | xargs docker volume rm\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Guardar datos de MongoDB"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},'docker run -d -p 27017:27017 -v "directorio/volume":/data/db mongo\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Guardar datos de Jenkins"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker run -d --name jenkins -p 8080:8080 -v /home/rubenfgr/jenkins/:/var/jenkins_home jenkins\n# ver la contrase\xf1a\ndocker exec jenkins bash -c "cat /var/jenkins_home/secrets/initialAdminPassword"\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Guardar logs de Nginx"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},"docker run -d --name my-nginx -p 80:80 -v /home/rubenfgr/nginx/:/var/log/nginx nginx\n# Mostrar contenido de ficheros en tiempo real\ntail -f nginx/error.log\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Compartir volumen"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'# crear un script\n#!/bin/bash\n\nwhile true; do\n   echo ""p" $(date +%H:%M:%S) "/p"" "" /opt/index.html && \\\n   sleep 10\ndone\n\n# Crear el Dockerfile\nFROM centos\n\nCOPY start.sh /start.sh\n\nRUN chmod +x /start.sh\n\nCMD /start.sh\n\n# Construir la imagen del generador\n# Ejecutar los contenedores del generador y nginx con volumen compartido\ndocker run -v $PWD/common:/opt -d --name gen generador\ndocker run -d --name nginx -v $PWD/common:/usr/share/nginx/html -p 80:80 nginx\n')),Object(l.b)("h1",{id:"document-root"},"DOCUMENT ROOT"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Mostrar el directorio root"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"docker info | grep -i root\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Cambiar el Document Root de Docker"))),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"vim /lib/systemd/system/docker.service")),Object(l.b)("p",null,'" Mover la carpeta de docker /var/lib/docker a "nueva-localizaci\xf3n"'),Object(l.b)("p",null,'" Editar la linea ',Object(l.b)("strong",{parentName:"p"},Object(l.b)("em",{parentName:"strong"},'ExecStart=/usr/bin/dockerd --data-root \\"nueva-localizaci\xf3n\\"'))),Object(l.b)("p",null,'" Notificar los cambios de un archivo de systemd'),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"systemctl daemon-reload")),Object(l.b)("p",null,'" Reiniciar el servicio de docker para aplicar el cambio realizado'),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"systemctl restart docker")),Object(l.b)("h1",{id:"redes"},"REDES"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Mostrar la IP de docker"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},'ip a | grep docker\ndocker run -d nginx\ndocker inspect "nombre-proceso-nginx"\ndocker inspect "nombre-proceso-nginx" | less\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Mostrar las redes de docker"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"docker network ls\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Crear una nueva red"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker network create test-network\n# Personalizada\ndocker network create -d bridge --subnet 172.20.10.0/24 --gateway 142.20.10.1 "nombre-red"\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Crear un contenedor dentro de una red"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker run --network "docker-test-network" -d --name test3 "nombre-imagen"\n# Con IP personalizada\ndocker run --network "docker-test-network" --ip "IP" -d --name test3 "nombre-imagen"\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Hacer ping de un contenedor a otro en la misma subnet"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker exec "nombre-contenedor" bash -c "ping "IP""\n# Con nombre solo para redes creadas por nosotros, NO se puede desde "bridge" (por defecto)\ndocker exec "nombre-contenedor" bash -c "ping "nombre-contenedor""\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Conectar contenedores en distintas redes"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker network connect "nombre-red" "nombre-contenedor"\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Desconectar contenedores en distintas redes"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker network disconnect "nombre-red" "nombre-contenedor"\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Eliminar redes"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'# Se deben eliminar "antes" los contenedores de la misma\ndocker network rm\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Conectar un contenedor a la red host"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},"docker run -d --network host --name cont5 -ti debian\n# Este contenedor tendr\xe1 los mismos par\xe1metros de red que el host\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Contenedores SIN red - none"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},"docker run --network none --name cont -d -ti debian\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},'Contenedor en red host con acceso solo desde "localhost'))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},"# Acceso desde localhost y IP local del host\ndocker run -d -p 8080:80 nginx\n# Acceso s\xf3lo desde localhost\ndocker run -d -p 127.0.0.1:8081:80 nginx\n")),Object(l.b)("h1",{id:"docker-compose"},"Docker Compose"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"*","*",'Crear un archivo "docker-compose.yml"')),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yml"},'version: "3.8"\nservices:\n  web:\n    image: nginx\n    container_name: nginx1\n    ports:\n      - "8080:80"\n    environment:\n      - "MY_ENV=RUBENFGR"\n    #env_file: common.env (rear un archivo de claves/valor)\n    volumes:\n      - "vol2:/usr/share/nginx/html"\n    #volumes: (HOST)\n    #- \'$PWD/HTML:/usr/share/nginx/html\'\n    networks:\n      - net-test\n  web2:\n    image: nginx\n    container_name: nginx2\n    ports:\n      - "8081:80"\n    networks:\n      - net-test\nvolumes:\n  vol2:\nnetworks:\n  net-test:\n')),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'# Iniciar el contenedor con docker-compose\ndocker-compose up -d\n# Iniciar especificando el archivo\ndocker-compose -f "my-file".yml up -d\n# Parar eliminar el contenedor creado\ndocker-compose down\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Build docker-compose")),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Crear un Dockerfile"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-sh"},"FROM debian\n\nRUN mkdir /opt/test\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Crear un docker-compose"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-yml"},'version: "3.8"\nservices:\n  web:\n    container_name: my-web\n    image: my-web-test\n    build: .\n    #build:\n    #context: .\n    #dockerfile: myDockerfile\n'))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Correr docker-compose"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-sh"},"docker-compose build\n"))))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Sobreescribir el CMD de un contenedor en compose")))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yml"},'version: "3.8"\nservices:\n  web:\n    image: debian\n    command: python -m SimpleHTTPServer 8080\n    ports:\n      - "8080:8080"\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Limitar los recursos"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yml"},'version: "3.8"\nservices:\n  web:\n    container_name: my-nginx\n    mem_limit: 20m\n    cpuset: "0"\n    image: nginx\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Reinicio autom\xe1tico del contenedor"))),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Crear el docker-compose")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yml"},'version: "3.8"\nservices:\n  web:\n    container_name: test\n    image: restart-image\n    build: .\n    restart:\n      always\n      # unless-stopped # Reinicio a menos que se detenga manualmente\n      # on-failure # Reinicio a pesar que falle internamente (error distinto de 0)\n')),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},"docker run -d --restart always --name my-test -p 8080:80 nginx\n")),Object(l.b)("ol",{start:2},Object(l.b)("li",{parentName:"ol"},"Crear el Dockerfile")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"FROM debian\n\nCOPY start.sh /start.sh\n\nRUN chmod +x /start.sh\n\nCMD /start.sh\n")),Object(l.b)("ol",{start:3},Object(l.b)("li",{parentName:"ol"},"Crear el .sh")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'#!/bin/bash\n\necho "Estoy vivo"\nsleep 5s\necho "Estoy detenido"\n# exit 1 (distinto de 0 para \'on-failure\')\n')),Object(l.b)("ol",{start:4},Object(l.b)("li",{parentName:"ol"},"Build, up and show logs & watch")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker-compose -f "file".yml build\ndocker-compose -f "file".yml up -d\ndocker logs "container-name"\nwatch docker ps\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Compose wordpress"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yml"},'version: "3.8"\nservices:\n  db:\n    container_name: my-mysql\n    image: mysql:5.7\n    volumes:\n      - $PWD/data:/var/lib/mysql\n    environment:\n      MYSQL_ROOT_PASSWORD: 12345678\n      MYSQL_DATABASE: wordpress\n      MYSQL_USER: wordpress\n      MYSQL_PASSWORD: wordpress\n    ports:\n      - "3306:3306"\n    networks:\n      - my_net\n  wordpress:\n    container_name: wordpress\n    volumes:\n      - "#PWD/html:/var/www/html"\n    depends_on: # Primero se debe crear el container db\n      - db\n    image: wordpress\n    ports:\n      - "80:80"\n    environment:\n      WORDPRESS_DB_HOST: db:3306\n      WORDPRESS_DB_USER: wordpress\n      WORDPRESS_DB_PASSWORD: wordpress\n    networks:\n      - my_net\nnetworks:\n  my_test:\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Compose Drupal"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yml"},'version: "3.8"\nservices:\n  drupal:\n    volumes:\n      - drupal-html:/var/www/html\n    image: drupal:8-apache\n    ports:\n      - 80:80\n    networks:\n      - net\n  postgres:\n    image: postgres:10\n    environment:\n      POSTGRES_PASSWORD: drupal\n    volumes:\n      - $PWD/data:/var/lib/postgresql/data\n    networks:\n      - net\n  volumes:\n    drupal-html:\n  networks:\n    net:\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Compose Prestashop"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yml"},'version: "3.8"\n\nservices:\n  db:\n    container_name: ps-mysql\n    image: mysql:5.7\n    volumes:\n      - $PWD/data:/var/lib/mysql\n    environment:\n      MYSQL_ROOT_PASSWORD: 12345678\n      MYSQL_DATABASE: ps\n      MYSQL_USER: ps\n      MYSQL_PASSWORD: ps\n    ports:\n      - "3306-3306"\n    networks:\n      - my_net\n  ps:\n    container_name: ps-web\n    volumes:\n      - "$PWD/html:/var/www/html"\n    depends_on:\n      - db\n    image: prestashop/prestashop\n    ports:\n      - "80:80"\n    environment:\n      DB_SERVER: db\n      DB_USER: ps\n      DB_PASSWD: ps\n      DB_NAME: ps\n    networks:\n      - my_net\nnetworks:\n  my_net:\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Compose Joomla"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yml"},'version: "3.8"\nservices:\n  joomla:\n    image: joomla\n    depends_on:\n      - mysql\n    ports:\n      - 8080:80\n    environment:\n      JOOMLA_DB_HOST: mysql\n      JOOMLA_DB_PASSWORD: example\n  mysql:\n    image: mysql:5.7\n    environment:\n      MYSQL_ROOT_PASSWORD: example\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Compose React E-Commerce"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yml"},'version: "3.8"\n\nservices:\n  reaction:\n    image: reactioncommerce/reaction\n    depends_on:\n      - mongo\n    ports:\n      - "3000:3000"\n    environment:\n      ROOT_URL: "http://localhost"\n      MONGO_URL: "mongodb://mongo:27017/reaction"\n    networks:\n      - net\n  mongo:\n    image: mongo\n    volumes:\n      - $PWD/data:/data/db\n    networks:\n      - net\nnetworks:\n  net:\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Compose Guacamole"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yml"},'version: "3.8"\nservices:\n  db:\n    container_name: guacamole-db\n    networks:\n      - net\n    image: mysql:5.7\n    volumes:\n      - ./conf/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql\n      - ./data:/var/lib/mysql\n    env_file: .env\n  daemon:\n    container_name: guacamole-daemon\n    networks:\n      - net\n    image: guacamole/guacd\n    depends_on:\n      - db\n  web:\n    container_name: guacamole-web\n    networks:\n      - net\n    image: guacamole/guacamole\n    env_file: .env\n    depends_on:\n      - daemon\n  proxy:\n    container_name: guacamole-proxy\n    hostname: guacamole-proxy\n    networks:\n      - net\n    image: nginx\n    ports:\n      - "80:80"\n    restart: always\n    volumes:\n      - $PWD/conf/nginx.conf:/etc/nginx/nginx.conf\n    depends_on:\n      - web\nnetworks:\n  net:\n    driver: bridge\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Compose Zabbix"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yml"},'version: \'3.8\'\nservices:\n   zabbix:\n      container_name: zabbix-web\n      image: zabbix\n      build: .\n      volumes:\n         - "$PWD/html:/usr/share/zabbix"\n      ports:\n         - "80:80"\n      networks:\n         - net\n   db:\n   container_name: zabbix-db\n   image: mysql: 5.7\n   environment:\n      MYSQL_ROOT_PASSWORD: 123456\n      MYSQL_USER: zabbix\n      MYSQL_PASSWORD: zabbix\n      MYSQL_DATABASE: zabbix\n   volumes:\n      - "$PWD/data:/var/lib/mysql"\n      - "$PWD/conf/create.sql:/docker-entrypoint-initdb.d/zabbit.sql" # carga el sql al inicio del contenedor\n   ports:\n      - "3306:3306"\n   networks:\n      - net\nnetworks:\n   net:\n')),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Container openssh-server")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"FROM debian\n\nRUN yum -y install openssh-server sudo\n\nRUN useradd guacamole && /user/bin/ssh-keygen -A\n\nWORKDIR /home/guacamole\n\nCMD /usr/sbin/sshd -D\n")),Object(l.b)("h1",{id:"docker-registry"},"Docker Registry"),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"#top"},"TOP")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Crear un registry local"))),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},'Crear un directorio "registry"'),Object(l.b)("li",{parentName:"ol"},"Correr un contenedor")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},"docker run -d -p 5000:5000 --name registry -v $PWD/data:/var/lib/registry registry:2\n")),Object(l.b)("ol",{start:3},Object(l.b)("li",{parentName:"ol"},"Tagear una imagen existente")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker tag "nombre-imagen-existente":"tag" "host":"puerto"/"nombre-imagen-registry":"tag-imagen-registry"\n# Example\ndocker tag hello-world:latest localhost:5000/hello-world:1.0\n')),Object(l.b)("ol",{start:4},Object(l.b)("li",{parentName:"ol"},"Eliminar imagenes")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker rmi "nombre-imagen"\n')),Object(l.b)("ol",{start:5},Object(l.b)("li",{parentName:"ol"},"Bajar la imagen desde el propio registry local")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'docker pull "host":"port"/"imagen-name"\n# Example\ndocker pull localhost:5000/hello-world\n')),Object(l.b)("h1",{id:"bash"},"Bash"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Simular archivos")),Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"fallocate -l 10M /opt/file1")))),Object(l.b)("h1",{id:"mysql"},"MySQL"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Lanzar contenedor MySQL mapeando puerto, con nombre, root-pass, usuario y user-pass"),Object(l.b)("inlineCode",{parentName:"li"},'docker run -d -p 3306:3306 --name "nombre-bd" -e "MYSQL_ROOT_PASSWORD="pw"" -e "MYSQL_DATABASE="nombre-bd"" -e "MYSQL_USER="nombre-usuario"" -e "MYSQL_PASSWORD="password-usuario" "nombre-imagen"[:"tag"]'))),Object(l.b)("h1",{id:"soluci\xf3n-a-resource-temporarily-unavailable"},"Soluci\xf3n a resource temporarily unavailable"),Object(l.b)("p",null,"Culpable: La funci\xf3n TasksMax Systemd / Linux"),Object(l.b)("h2",{id:"prerrequisitos"},"Prerrequisitos"),Object(l.b)("p",null,"systemd debe ser mayor o igual a 227 (versi\xf3n 219 para RHEL)\nEl kernel de Linux debe ser superior o igual a 4.3 (versi\xf3n 3.10 para RHEL)\nLa salida de systemctl status docker | grep Tasksincluye unLimit\nEste problema fue resuelto por Docker EE 17.06.2-ee-7."),Object(l.b)("h2",{id:"soluci\xf3n"},"Soluci\xf3n"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},"sudo systemctl set-property docker.service TasksMax=infinity\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n")))}s.isMDXComponent=!0},86:function(e,n,r){"use strict";r.d(n,"a",(function(){return m})),r.d(n,"b",(function(){return d}));var a=r(0),t=r.n(a);function l(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){l(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function b(e,n){if(null==e)return{};var r,a,t=function(e,n){if(null==e)return{};var r,a,t={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var i=t.a.createContext({}),s=function(e){var n=t.a.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},m=function(e){var n=s(e.components);return t.a.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.a.createElement(t.a.Fragment,{},n)}},u=t.a.forwardRef((function(e,n){var r=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,i=b(e,["components","mdxType","originalType","parentName"]),m=s(r),u=a,d=m["".concat(o,".").concat(u)]||m[u]||p[u]||l;return r?t.a.createElement(d,c(c({ref:n},i),{},{components:r})):t.a.createElement(d,c({ref:n},i))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=u;var c={};for(var b in n)hasOwnProperty.call(n,b)&&(c[b]=n[b]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var i=2;i<l;i++)o[i]=r[i];return t.a.createElement.apply(null,o)}return t.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);